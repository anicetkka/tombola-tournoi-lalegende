const mongoose = require('mongoose');
const User = require('../models/User');
require('dotenv').config();

const activateAdmin = async () => {
  try {
    // Connexion √† MongoDB
    await mongoose.connect(process.env.MONGO_URI || 'mongodb://localhost:27017/tombola_cote_ivoire', {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });

    console.log('‚úÖ Connexion √† MongoDB r√©ussie');

    // Trouver l'administrateur
    const adminPhone = process.env.ADMIN_PHONE || '+2250000000000';
    const admin = await User.findOne({ phone: adminPhone });

    if (!admin) {
      console.error('‚ùå Administrateur non trouv√© avec le num√©ro:', adminPhone);
      mongoose.connection.close();
      process.exit(1);
    }

    console.log(`üîç Administrateur trouv√©: ${admin.fullName} (${admin.phone})`);
    console.log(`üìä Statut actuel: ${admin.isActive ? 'Actif' : 'Inactif'}`);

    if (admin.isActive) {
      console.log('‚úÖ L\'administrateur est d√©j√† actif');
    } else {
      // Activer l'administrateur
      admin.isActive = true;
      await admin.save();
      console.log('üéâ Administrateur activ√© avec succ√®s !');
    }

    console.log('üìã Informations de l\'administrateur:');
    console.log(`   - Nom: ${admin.fullName}`);
    console.log(`   - T√©l√©phone: ${admin.phone}`);
    console.log(`   - R√¥le: ${admin.role}`);
    console.log(`   - Statut: ${admin.isActive ? 'Actif' : 'Inactif'}`);
    console.log(`   - Cr√©√© le: ${admin.createdAt}`);

  } catch (error) {
    console.error('‚ùå Erreur lors de l\'activation de l\'administrateur:', error);
  } finally {
    await mongoose.connection.close();
    process.exit(0);
  }
};

// Ex√©cuter le script
activateAdmin();
